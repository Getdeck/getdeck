name: pytest and try it yourself example

on:
  workflow_dispatch: {}
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Poetry installation
        run: |
          poetry install
      - name: Install k3d
        shell: bash
        run: "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
      - name: Set Getdeck to no tracking
        shell: bash
        run: |
          mkdir -p ~/.getdeck
          cd ~/.getdeck
          touch config.ini
          echo "[telemetry]" >> config.ini
          echo "track = False" >> config.ini
      - name: Create a cluster using getdeck
        run: |
          poetry run coverage run -a -m getdeck get --name oauth2-demo --wait --timeout 180 https://github.com/gefyrahq/gefyra-demos.git
      - name: Stop the cluster
        run: |
          poetry run coverage run -a -m getdeck stop https://github.com/gefyrahq/gefyra-demos.git
      - name: Start the cluster again
        run: |
          poetry run coverage run -a -m getdeck get --name oauth2-demo https://github.com/gefyrahq/gefyra-demos.git
      - name: Remove the cluster
        run: |
          poetry run coverage run -a -m getdeck remove --cluster https://github.com/gefyrahq/gefyra-demos.git
      - name: Show coverage report
        run: |
          poetry run coverage report
      - name: Upload coverage data to coveralls.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: |
          poetry run coveralls --service=github
  coveralls:
    name: Indicate completion to coveralls.io
    # need secrets.GITHUB_TOKEN
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
